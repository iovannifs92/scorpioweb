@{ ViewBag.Title = "";
    Layout = null; }


<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<link rel="stylesheet" type="text/css" href="~/css/style.css">
<script src="~/js/jquery-ui.js"></script>

<style>
    * {
        box-sizing: border-box;
    }

    body {
        font: 16px Arial;
    }

    /*the container must be positioned relative:*/
    .autocomplete {
        position: relative;
        display: inline-block;
    }

    input {
        border: 2px solid #f2f2f2;
        border-radius: 5px;
        padding: 10px;
        font-size: 16px;
    }

        input[type=text] {
            width: 100%;
        }

        input[type=submit] {
            background-color: DodgerBlue;
            color: #f2f2f2;
            cursor: pointer;
        }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            /*when hovering an item:*/
            .autocomplete-items div:hover {
                background-color: #e9e9e9;
            }

    /*when navigating through the items using the arrow keys:*/
    .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #f2f2f2;
    }
</style>

<script type="text/javascript">
    $(document).ready(function () {
        function autocomplete(inp, arr) {
            var currentFocus;
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                this.parentNode.appendChild(a);
                for (i = 0; i < arr.length; i++) {
                    if (arr[i].toUpperCase().includes(val.toUpperCase())) {
                        b = document.createElement("DIV");
                        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                        b.innerHTML += arr[i].substr(val.length);
                        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>"; b.addEventListener("click", function (e) {
                            inp.value = this.getElementsByTagName("input")[0].value;

                            closeAllLists();
                        });
                        a.appendChild(b);
                    }
                }
            });

            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {

                    currentFocus++;

                    addActive(x);
                } else if (e.keyCode == 38) { //up

                    currentFocus--;

                    addActive(x);
                } else if (e.keyCode == 13) {

                    e.preventDefault();
                    if (currentFocus > -1) {

                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {

                if (!x) return false;

                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);

                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {

                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }
        //https://stackoverflow.com/questions/50056518/ijsonhelper-does-not-contain-a-definition-for-encode

        var idoficialia = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.OficiosCausa))');
        autocomplete(document.getElementById("idoficialia"), idoficialia);
    });


    showModal = (url, title, id) => {
        var IdFracciones = document.getElementById("FracionesImpuestasIdFracionesImpuestas").value;
        $.ajax({
            type: "GET",
            url: url + "?id=" + id,
            success: function (res) {
                $("#form-modal .modal-body").html(res);
                $("#form-modal .modal-title").html(title);
                $("#form-modal").modal('show');
            },
            traditional: true,
            data: {
                datosBitacora: [IdFracciones],
            },
            error: function (res) {
            }
        })
    }

</script>




@{int i = 0;}
@foreach (var item in ViewData["tablaBiatacora"] as IEnumerable<scorpioweb.Models.BitacoraViewModal>)
{
    i++;
    <div class="form-group col-md-12">
        <form onsubmit="return confirm('¿Deseas modificar los datos?');" asp-action="EditAddAccionSupervision" asp-route-nombre="@ViewBag.nombre" asp-route-cp="@ViewBag.cp" asp-route-idpersona="@ViewBag.idpersona" asp-route-supervisor="@ViewBag.supervisor" asp-route-idcp="@ViewBag.idcp" enctype="multipart/form-data">
            <div>
                <label class="control-label">Accion @i</label>
            </div>
            <input readonly style="display:none" name="SupervisionIdSupervision" id="SupervisionIdSupervision" value="@item.bitacoraVM.SupervisionIdSupervision" class="form-control" />
            <input readonly style="display:none" name="IdBitacora" id="IdBitacora" value="@item.bitacoraVM.IdBitacora" class="form-control" />
            <input readonly style="display:none" name="FracionesImpuestasIdFracionesImpuestas" id="FracionesImpuestasIdFracionesImpuestas" value="@item.bitacoraVM.FracionesImpuestasIdFracionesImpuestas" class="form-control" />
            <div class="form-group col-md-8">
                <label class="control-label">Fecha</label>
                <input id="Fecha" name="Fecha" class="form-control" asp-for="@item.bitacoraVM.Fecha" type="date" />
            </div>
            <div class="form-group col-md-4 autocomplete">
                <label class="control-label">Id Oficialia</label>
                <input name="OficialiaIdOficialia" id="idoficialia" type="text" maxlength="150" class="form-control" value="@item.bitacoraVM.OficialiaIdOficialia" />
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Tipo de Persona</label>
                <select class="form-control" name="TipoPersona" id="TipoPersona"
                        asp-items="@(new SelectList(ViewBag.TipoPersona, "Value", "Text",@item.bitacoraVM.TipoPersona))">
                </select>
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Tipo de Visita</label>
                <select class="form-control" name="TipoVisita" id="TipoVisita"
                        asp-items="@(new SelectList(ViewBag.TipoVisita, "Value", "Text",@item.bitacoraVM.TipoVisita))">
                </select>
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Texto</label>
                <input name="Texto" id="Texto" value="@item.bitacoraVM.Texto" class="form-control" />
            </div>

            @if (item.bitacoraVM.RutaEvidencia != null)
            {
                <div class="form-group col-md-12">
                    <label class="control-label">Evidencia</label>
                    <a id="btnEditar" style="font-size:20px" href="~/Evidencia/@Html.DisplayFor(modelItem => item.bitacoraVM.RutaEvidencia)" target="_blank">
                        <i class="fa fa-paperclip fa-6"></i>
                    </a>
                </div>
                <div class="form-group col-md-12">
                    <label class="control-label">Editar Evidencia</label>
                    <input type="file" class="custom-file-input" id="evidencia" name="evidencia" lang="es">
                </div>
            }
            else
            {
                <div class="form-group col-md-12">
                    <input type="file" class="custom-file-input" id="evidencia" name="evidencia" lang="es">
                </div>
            }
            <div class="form-group col-lg-3">
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-save"></i>
                    Guardar
                </button>
            </div>
            <div class="form-group col-lg-9">
                <button asp-action="DeleteRegistro2" asp-route-id="@item.bitacoraVM.IdBitacora" asp-route-nombre="@ViewBag.nombre" asp-route-cp="@ViewBag.cp" asp-route-idpersona="@ViewBag.idpersona" asp-route-supervisor="@ViewBag.supervisor" asp-route-idcp="@ViewBag.idcp" onclick="return update();" class="btn btn-danger" type="submit">
                    <i class="fa fa-trash"></i> Borrar
                </button>
            </div>
        </form>
    </div>
}
@foreach (var item in ViewData["tablaBiatacora"] as IEnumerable<scorpioweb.Models.BitacoraViewModal>)
{
    <a id="btnEditar" onclick="showModal('@Url.Action("CreateBitacora", "Supervisiones", new {id=@item.bitacoraVM.SupervisionIdSupervision, nombre = @ViewBag.nombre,idpersona=@ViewBag.idpersona,idcp=@ViewBag.idcp, supervisor=@ViewBag.supervisor, cp=@ViewBag.cp}, Context.Request.Scheme)', 'Agregar Registro', null)" class="btn btn-success">
        <i class="fa fa-plus"></i>  Agregar Registro
    </a>
    break;
}