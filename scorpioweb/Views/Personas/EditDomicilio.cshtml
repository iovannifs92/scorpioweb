@model scorpioweb.Models.Domicilio

@* Necesario para los modales en el servidor *@
@*<script src="~/js/jquery-1.11.1.min.js"></script>*@

<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<link rel="stylesheet" type="text/css" href="~/css/style.css">
<script src="~/js/jquery-ui.js"></script>
<script type='text/javascript' src='~/js/apikey.js'></script>

<script type="text/javascript" src="~/js/scripts.js"></script>

<script type="text/javascript">
    var tipo = 0;
    var key = keys.GOOGLE_API_KEY;
    $(document).ready(function () {
        //#region -Municipios-
        $('#estadoD').change(function () {
            $.ajaxSetup({
                async: false
            });

            localStorage.setItem('municipioAnterior',$('#municipioD').val());
            var url = '@Url.Content("~/")' + "Personas/GetMunicipio";
            var ddlsource = '#estadoD';
            $.getJSON(url, { EstadoId: $(ddlsource).val() }, function (data) {
                var items = "<option value='0'>Sin municipio</option>";
                $("#municipioD").empty();
                $.each(data, function (i, municipio) {
                    if(municipio.text == document.getElementById("municipioD").text) {
                        items += "<option value='" + municipio.value + "' selected>" + municipio.text + "</option>";
                    }
                    else {
                        items += "<option value='" + municipio.value + "'>" + municipio.text + "</option>";
                    }
                });
                $('#municipioD').html(items);
            });
            localStorage.setItem('municipioD',$('#municipioD').val());

            $.ajaxSetup({
                async: true
            });
        });
        $('#paisD').change(function () {
            var selectedCountry = $(this).children("option:selected").val();
            if (selectedCountry != "MEXICO") {
                 $("#estadoD").val(0);
                var items = "<option value='0'>Sin municipio</option>";
                $('#municipioD').html(items);
                $("#municipioD").val(0);
                $("#EstadoD").css("display", "none");
                $("#MunicipioD").css("display", "none");
                $("#PaisD").removeClass("col-md-4");
                $("#PaisD").addClass("col-md-12");
            }
            else {
                $("#EstadoD").css("display", "block");
                $("#MunicipioD").css("display", "block");
                $("#PaisD").removeClass("col-md-12");
                $("#PaisD").addClass("col-md-4");
            }

        });

        $('#DomcilioSecundario').change(function () {
            var selecteddom = $(this).children("option:selected").val();
            if (selecteddom == "SI") {
                $("#DivbtnEditar").css("display", "block");
                $("#DivbtnEditar").css("padding", "25px");
                $("#DivbtnAdd").css("display", "none");
            }
            else {
                $("#DivbtnAdd").css("display", "block");
                $("#DivbtnAdd").css("padding", "25px");
                $("#DivbtnEditar").css("display", "none"); 
            }

        });
        //Para abrir vista temporal en modal 
        showModal = (url, title, id) => {

            $.ajax({
                type: "GET",
                url: url + "?id=" + id,
                success: function (res) {
                    $("#form-modal .modal-body").html(res);
                    $("#form-modal .modal-title").html(title);
                    $("#form-modal").modal('show');
                },
                error: function (res) {

                }
            })
        }

        //#endregion
        //*Combobox Modal AdddomicilioSecundario*/
        var items = "<option value='0'>Selecciona</option>";
        $('#MunicipioM').html(items);

        $('#EstadoM').change(function () {
            var url = '@Url.Content("~/")' + "Personas/GetMunicipioED";
            var ddlsource = '#EstadoM';
            $.getJSON(url, { EstadoId: $(ddlsource).val() }, function (data) {
                var items = '';
                $("#MunicipioM").empty();

                $.each(data, function (i, municipio) {
                    items += "<option value='" + municipio.value + "'>" + municipio.text + "</option>";
                });
                $('#MunicipioM').html(items);
            });
        });

        $('#PaisM').change(function () {
        var selectedCountry = $(this).children("option:selected").val();
        if (selectedCountry != "MEXICO") {
            $("#EstadoM").val(0);
            var items = "<option value='0'>Selecciona</option>";
            $('#MunicipioM').html(items);
            $("#MunicipioM").val(0);
            $("#DivEstadoM").css("display", "none");
            $("#DivMunicipioM").css("display", "none");

        }
        else {
            $('#MunicipioM').html(items);
            $("#MunicipioM").val(0);
            $("#DivEstadoM").css("display", "block");
            $("#DivMunicipioM").css("display", "block");

            }

        });
        //#endregion
        //region Guardar AdddomicilioModal en caso de que 
        //no tenga domicilios secundarios para agregar el primero 
        $('#btnAddDomiSecu').on("click", function (e) {
            e.preventDefault();
            var IdDomicilio = document.getElementById("IdDomicilioM").value;
            var td = document.getElementById("TipoDomicilioM");
            var TipoDomicilio = td.options[td.selectedIndex].value;
            var Calle = document.getElementById("CalleM").value;
            var No = document.getElementById("NoM").value;
            var TipoUbicacion = document.getElementById("TipoUbicacionM").value;
            var NombreCf = document.getElementById("NombreCfM").value;
            var p = document.getElementById("PaisM");
            var Pais = p.options[p.selectedIndex].value;
            var e = document.getElementById("EstadoM");
            var Estado = e.options[e.selectedIndex].value;
            var m = document.getElementById("MunicipioM");
            var Municipio = m.options[m.selectedIndex].value;
            var te = document.getElementById("TemporalidadM");
            var Temporalidad = te.options[te.selectedIndex].value;
            var rh = document.getElementById("ResidenciaHabitualM");
            var ResidenciaHabitual = rh.options[rh.selectedIndex].value;
            var Cp = document.getElementById("CpM").value;
            var Referencias = document.getElementById("ReferenciasM").value;
            var Motivo = document.getElementById("MotivoM").value;
            var Horario = document.getElementById("HorarioM").value;
            var Observaciones = document.getElementById("ObservacionesM").value;
            $.ajax({
                type: "POST",
                dataType: "json",
                url: "/Personas/CrearDomicilioSecundario",
                traditional: true,
                data: {
                    datosDomicilio: [IdDomicilio, TipoDomicilio, Calle, No, TipoUbicacion, NombreCf, Pais, Estado, Municipio, Temporalidad, ResidenciaHabitual, Cp, Referencias, Motivo, Horario, Observaciones],
                },
                success: function (response) {
                    alert("Datos Guardados con exito");
                    location.reload();
                },
                error: function (response) {
                    location.reload();
                }
            });
        });
        //#endregion

        $('#btnGeocoding').on("click", function (e) {
            e.preventDefault();
            var calle = document.getElementById("calle").value;
            var no = document.getElementById("no").value;
            var nombre = document.getElementById("combobox").value;
            var cp = document.getElementById("cp").value;
            var e = document.getElementById("estadoD");
            var estado = e.options[e.selectedIndex].text;
            var m = document.getElementById("municipioD");
            var municipio = m.options[m.selectedIndex].text;
            getGeocodingData(calle, no, nombre, cp, municipio, estado);
        });

        var form = document.getElementById("forma");
        r = document.getElementById("municipioD");

        form.addEventListener('submit', function(e) {
            if(r.options[r.selectedIndex].text == "Sin municipio"){
                alert("Seleccione el municipio donde vive");
                e.preventDefault();
            }
        });
    });
    $(function () {
        $.widget("custom.combobox", {
            _create: function () {
                this.wrapper = $("<span>")
                    .insertAfter(this.element);
                this.element.hide();
                this._createAutocomplete();
                this._createShowAllButton();
            },
            _createAutocomplete: function () {
                var selected = this.element.children(":selected"),
                    value = "@ViewBag.colonia";
                this.input = $("<input id=inputAutocomplete name=inputAutocomplete>")
                    .appendTo(this.wrapper)
                    .val(value)
                    .attr("title", "")
                    .addClass("custom-combobox-input ui-widget ui-widget-content ui-state-default ui-corner-left form-control entrada")
                    .autocomplete({
                        delay: 0,
                        minLength: 0,
                        source: $.proxy(this, "_source")
                    })
                    .tooltip({
                        classes: {
                            "ui-tooltip": "ui-state-highlight"
                        }
                    });
                this._on(this.input, {
                    click: function (event, ui) {
                        //$("input").focus();
                        var e = jQuery.Event("keydown");
                        e.which = 13; // ascii carriage return code
                        $("input").trigger(e);
                    },
                    autocompleteselect: function (event, ui) {
                        ui.item.option.selected = true;
                        this._trigger("select", event, {
                            item: ui.item.option
                        });

                        var colonia = ui.item.option.text;
                        var index = colonia.lastIndexOf(",");
                        document.getElementById("cp").value = colonia.substr(index + 2);
                    },
                    autocompleteclose: function (event, ui) {
                        var autocomplete = document.getElementById("inputAutocomplete");
                        var cb = document.getElementById("combobox");
                        var colonia = cb.options[cb.selectedIndex].text;
                        if (autocomplete.value == colonia) {
                            var index = colonia.lastIndexOf(",");
                            autocomplete.value = colonia.substr(0, index);
                        }
                    },
                    autocompletechange: "_removeIfInvalid"
                });
            },
            _createShowAllButton: function () {
                var input = this.input,
                    wasOpen = false;
                $("<a>")
                    .attr("tabIndex", -1)
                    .attr("title", "Show All Items")
                    .tooltip()
                    .appendTo(this.wrapper)
                    .button({
                        icons: {
                            primary: "ui-icon-triangle-1-s"
                        },
                        text: false
                    })
                    .removeClass("ui-corner-all")
                    .addClass("custom-combobox-toggle ui-corner-right")
                    .on("mousedown", function () {
                        wasOpen = input.autocomplete("widget").is(":visible");
                    })
                    .on("click", function () {
                        input.trigger("focus");
                        // Close if already visible
                        if (wasOpen) {
                            return;
                        }
                        // Pass empty string as value to search for, displaying all results
                        input.autocomplete("search", "");
                    });
            },
            _source: function (request, response) {
                var res = request.term.split(" ");

                var matcher = [];
                for (i = 0; i < res.length; i++) {
                    matcher[i] = new RegExp($.ui.autocomplete.escapeRegex(res[i]), "i");
                }

                var resultset = [];
                response(this.element.children("option").map(function () {
                    var text = $(this).text();

                    for (i = 0; i < res.length; i++) {
                        if (!this.value || (request.term && !matcher[i].test(text)))
                        return;
                    }
                    resultset.push({
                        label: text,
                        value: text,
                        option: this
                    });
                }));
                response(resultset);
                    
                $("#btnCausaPenal").css("display", "block");
            },
            _removeIfInvalid: function (event, ui) {
                // Selected an item, nothing to do
                if (ui.item) {
                    return;
                }
                // Search for a match (case-insensitive)
                var value = this.input.val(),
                    valueLowerCase = value.toLowerCase(),
                    valid = false;
                this.element.children("option").each(function () {
                    if ($(this).text().toLowerCase() === valueLowerCase) {
                        this.selected = valid = true;
                        return false;
                    }
                });

                // Found a match, nothing to do
                if (valid) {
                    return;
                }
                // Remove invalid value
                this.input
                    //leave value
                    //.val("")
                    .attr("title", value + " didn't match any item")
                    .tooltip("open");
                this.element.val("");
                this._delay(function () {
                    this.input.tooltip("close").attr("title", "");
                }, 2500);
                this.input.autocomplete("instance").term = "";
            },
            _destroy: function () {
                this.wrapper.remove();
                this.element.show();
            }
        });
        $("#combobox").combobox({
            create: function () {
                $("input").focus();
            }
        });
        $("#toggle").on("click", function () {
            $("#combobox").toggle();
        });
    });
</script>

@{
    ViewData["Title"] = "Domicilio";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<h2>Domicilio</h2>
<h3>@ViewData["Nombre"]</h3>
<hr />

<div class="row">
    <div class="col-lg-12">
        <form asp-action="EditDomicilio" id="forma">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="IdDomicilio" />
            <input type="hidden" asp-for="PersonaIdPersona" />

            <div id="map"></div>
            <script id="GoogleApi"></script>
            <script src="~/js/scripts.js"></script>
            <script>
                var url = "https://maps.googleapis.com/maps/api/js?key=";
                var api = key;
                var url2 = "&callback=iniciarMap&v=weekly";
                document.getElementById("GoogleApi").src = url + api + url2;
            </script>
            @if (User.IsInRole("Masteradmin"))
            {
                <input required id="lat" name="lat" asp-for="Lat" class="form-control" />
                <input id="lng" name="lng" asp-for="Lng" class="form-control" />
            }
            else
            {
                <input type="hidden" required id="lat" name="lat" asp-for="Lat" class="form-control" />
                <input type="hidden" id="lng" name="lng" asp-for="Lng" class="form-control" />
            }

            <label class="control-label col-sm-12">Tipo de Domicilio</label>
            <div class="form-group col-sm-9">
                <select class="form-control" name="tipoDomicilio" id="tipoDomicilio"
                        asp-items="@(new SelectList(ViewBag.listatDomicilio, "Value", "Text", @ViewBag.idtDomicilio))">
                </select>
            </div>
            <button class="btn btn-primary form-group col-sm-3" type="button" style="margin-left:-15px;" id="btnGeocoding" name="btnGeocoding">
                <i class="fa fa-map-marker"></i> Posicionar marcador
            </button>
            <div class="form-group col-lg-5">
                <label asp-for="Calle" class="control-label"></label>
                <input required id="calle" name="calle" asp-for="Calle" class="form-control" />
                <span asp-validation-for="Calle" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-2">
                <label class="control-label">Número</label>
                <input id="no" name="no" asp-for="No" class="form-control" />
                <span asp-validation-for="No" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-5">
                <label class="control-label">Colonia/Fraccionamiento/Localidad</label>
                <select required class="form-control" id="combobox" name="combobox" style="display:none;"
                        asp-items="@(new SelectList(ViewBag.colonias, "Idzonas", "ColoniaCP", @ViewBag.idZona))">
                </select>
            </div>
            @if (ViewBag.pais == "MEXICO")
            {
                <div class="form-group col-md-4" id="PaisD">
                    <label class="control-label">País</label>
                    <select class="form-control" name="Pais" id="paisD"
                            asp-items="@(new SelectList(ViewBag.ListaPaisD, "Value", "Text", @ViewBag.idPaisD))">
                    </select>
                </div>
                <div class="form-group col-md-4" id="EstadoD">
                    <label class="control-label">Estado</label>
                    <select class="form-control" name="Estado" id="estadoD"
                            asp-items="@(new SelectList(ViewBag.ListaEstadoD, "Id", "Estado", @ViewBag.idEstadoD))">
                    </select>
                </div>
                <div class="form-group col-md-4" id="MunicipioD">
                    <label class="control-label">Municipio</label>
                    <select class="form-control" name="Municipio" id="municipioD"
                            asp-items="@(new SelectList(ViewBag.ListaMunicipioD, "Id", "Municipio",  @ViewBag.idMunicipioD))">
                    </select>
                </div>
            }
            else
            {
                <div class="form-group col-md-12" id="PaisD">
                    <label class="control-label">País</label>
                    <select class="form-control" name="Pais" id="paisD"
                            asp-items="@(new SelectList(ViewBag.ListaPaisD, "Value", "Text", @ViewBag.idPaisD))">
                    </select>
                </div>
                <div class="form-group col-md-4" style="display:none" id="EstadoD">
                    <label class="control-label">Estado</label>
                    <select class="form-control" name="Estado" id="estadoD"
                            asp-items="@(new SelectList(ViewBag.ListaEstadoD, "Id", "Estado", @ViewBag.idEstadoD))">
                    </select>
                </div>
                <div class="form-group col-md-4" style="display:none" id="MunicipioD">
                    <label class="control-label">Municipio</label>
                    <select class="form-control" name="Municipio" id="municipioD"
                            asp-items="@(new SelectList(ViewBag.ListaMunicipioD, "Id", "Municipio",  @ViewBag.idMunicipioD))">
                    </select>
                </div>
            }

            <div class="form-group col-md-4" id="Temporalidad">
                <label class="control-label">¿Cuánto tiempo ha vivido en este domicilio?</label>
                <select class="form-control" name="Temporalidad" id="Temporalidad"
                        asp-items="@(new SelectList(ViewBag.ListaTemporalidad,  "Value", "Text", @ViewBag.idTemporalidadD))">
                </select>
            </div>
            <div class="form-group col-lg-4">
                <label class="control-label">¿Este domicilio es su residencia habitual?</label>
                <select class="form-control" name="ResidenciaHabitual" id="ResidenciaHabitual"
                        asp-items="@(new SelectList(ViewBag.listaResidenciaHabitual, "Value", "Text", @ViewBag.idResidenciaHabitual))">
                </select>
            </div>
            <div class="form-group col-lg-4">
                <label class="control-label">Código Postal</label>
                <input id="cp" name="cp" type="number" asp-for="Cp" class="form-control" />
                <span asp-validation-for="Cp" class="text-danger"></span>
            </div>
            @if (User.IsInRole("Masteradmin"))
            {
                <div class="form-group col-md-12">
                    <label class="control-label">Zona: </label>
                    <label class="form-label" name="zona" id="zona">@ViewBag.zona</label>
                </div>
            }
            <div class="form-group col-lg-12">
                <label asp-for="Referencias" class="control-label"></label>
                <input asp-for="Referencias" class="form-control" maxlength="300" />
                <span asp-validation-for="Referencias" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-12">
                <label asp-for="Horario" class="control-label"></label>
                <input asp-for="Horario" class="form-control" />
                <span asp-validation-for="Horario" class="text-danger"></span>
            </div>
            <div class="form-group col-md-11 col-sm-11 col-xs-9" id="DivDomcilioSecundario">
                <label class="control-label">¿Cuenta con domicilio secundario?</label>
                <select asp-for="DomcilioSecundario" class="form-control" name="DomcilioSecundario" id="DomcilioSecundario"
                        asp-items="@(new SelectList(ViewBag.listacuentaDomicilioSecundario, "Value", "Text", @ViewBag.idcuentaDomicilioSecundario))">
                </select>
            </div>
 
            @if (ViewBag.domi == "SI")
            {
                <div class="form-group col-md-1 col-sm-1 col-xs-3" id="DivbtnAdd" style="display:none">
                    <button id="btnDomSecu" name="btnDomSecu" type="button" data-toggle="modal" data-target="#modalAddDomSecundario1" class="btn btn-success">
                        <i class="fa fa-plus"></i> Añadir
                    </button>
                </div>
                <div class="form-group col-md-1 col-sm-1  col-xs-3" id="DivbtnEditar" style="padding-top:25px;">
                    <a id="btnEditar" name="btnEditar" onclick="showModal('@Url.Action("EditDomSecundario2","Personas",new {id=@Model.IdDomicilio,nombre=@ViewData["Nombre"],idpersona=@Model.PersonaIdPersona},Context.Request.Scheme)','Edita Domicilo Secundario')" class="btn btn-success">
                        <i class="fa fa-pencil"></i> Editar
                    </a>
                </div>
            }
            else
            {
                <div class="form-group col-md-1 col-sm-1  col-1 col-xs-3" id="DivbtnEditar" style="display:none;">
                    <a id="btnEditar" name="btnEditar" onclick="showModal('@Url.Action("EditDomSecundario2","Personas",null,Context.Request.Scheme)','Edita Domicilo Secundario',@Model.IdDomicilio)" class="btn btn-success">
                        <i class="fa fa-pencil"></i> Editar
                    </a>
                </div>
                <div class="form-group col-md-1 %col-sm-1 col-xs-3" id="DivbtnAdd" style="padding-top:25px;">
                    <button id="btnDomSecu" name="btnDomSecu" type="button" data-toggle="modal" data-target="#modalAddDomSecundario1" class="btn btn-success">
                        <i class="fa fa-plus"></i> Añadir
                    </button>
                </div>
            }
            <div class="form-group col-lg-12">
                <label asp-for="Observaciones" class="control-label"></label>
                <input asp-for="Observaciones" class="form-control" />
                <span asp-validation-for="Observaciones" class="text-danger"></span>
            </div>
            <div class="form-group col-lg-12">
                <button type="submit" class="btn btn-primary">
                    <i class="fa fa-save"></i>
                    Guardar
                </button>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="MenuEdicion" asp-route-id="@Model.PersonaIdPersona" class="btn btn-link">
        Regresar
    </a>
</div>

<!-- Modal Creacion de nuevo domicilio  entra cuando no hay domicilios secundarios -->
<div class="modal fade" id="modalAddDomSecundario1" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header" style="background-color:#0078A7;">
                <h5 class="modal-title" style="font-size: 30px; color:#fff;">Añadir Nuevo Domicilio Secundario</h5>
            </div>
            <div class="modal-body">

                <div class="form-group">
                    <input type="hidden" name="IdDomicilioSecundario" type="text" class="form-control" />
                </div>
                <input type="hidden" readonly name="IdDomicilioM" id="IdDomicilioM" class="form-control" value="@Model.IdDomicilio" />
                <div class="form-group col-md-12">
                    <label class="control-label">Tipo de Domicilio</label>
                    <select required class="form-control" name="TipoDomicilio" id="TipoDomicilioM">
                        <option value="RENTADA">Rentada</option>
                        <option value="PRESTADA">Prestada</option>
                        <option value="PROPIA">Propia</option>
                        <option value="FAMILIAR">Familiar</option>
                        <option value="SITACION DE CALLE">Situación de calle</option>
                        <option value="IRREGULAR">Irregular</option>
                    </select>
                </div>
                <div class="form-group col-md-8">
                    <label class="control-label">Calle</label>
                    <input id="CalleM" name="Calle" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-4">
                    <label class="control-label">No</label>
                    <input id="NoM" name="No" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">Tipo de Ubicación</label>
                    <input id="TipoUbicacionM" name="TipoUbicacion" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">Nombre de Colonia/Fraccionamiento</label>
                    <input id="NombreCfM" name="NombreCfM" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-12" id="DivPaisM">
                    <label class="control-label">País</label>
                    <select class="form-control" name="Pais" id="PaisM"
                            asp-items="@(new SelectList(ViewBag.ListaPaisD, "Value", "Text"))">
                    </select>
                </div>
                <div class="form-group col-md-6" id="DivEstadoM">
                    <label class="control-label">Estado</label>
                    <select class="form-control" name="Estado" id="EstadoM"
                            asp-items="@(new SelectList(ViewBag.ListaEstadoD, "Id", "Estado"))">
                    </select>
                </div>
                <div class="form-group col-md-6" id="DivMunicipioM">
                    <label class="control-label">Municipio</label>
                    <select class="form-control" name="Municipio" id="MunicipioM"
                            asp-items="@(new SelectList( ViewBag.ListaMunicipioD, "Id", "Municipio"))">
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">Temporalidad</label>
                    <select required class="form-control" name="Temporalidad" id="TemporalidadM">
                        <option value="MAS DE 10 AÑOS">Más de 10 años</option>
                        <option value="ENTRE 5 Y 10 AÑOS">Entre 5 y 10 años</option>
                        <option value="ENTRE 2 Y 5 AÑOS">Entre 2 y 5 años</option>
                        <option value="ENTRE 6 MESES Y 2 AÑOS">Entre 6 meses y 2 años</option>
                        <option value="MENOS DE 6 MESES">Menos de 6 meses</option>
                    </select>
                </div>
                <div class="form-group col-md-6">
                    <label class="control-label">Residencia Habitual</label>
                    <select required class="form-control" name="ResidenciaHabitual" id="ResidenciaHabitualM">
                        <option value="Si">Si</option>
                        <option value="No">No</option>
                    </select>
                </div>
                <div class="form-group col-md-12">
                    <label class="control-label">Código Postal</label>
                    <input id="CpM" name="Cp" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-12">
                    <label class="control-label">Referencias</label>
                    <input id="ReferenciasM" name="Referencias" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-12">
                    <label class="control-label">Horario</label>
                    <input id="HorarioM" name="Horario" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-12">
                    <label class="control-label">Motivo</label>
                    <input id="MotivoM" name="Motivo" type="text" class="form-control" />
                </div>
                <div class="form-group col-md-12">
                    <label class="control-label">Observaciones</label>
                    <input id="ObservacionesM" name="observa" type="text" class="form-control" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
                    <button type="button" class="btn btn-primary" id="btnAddDomiSecu" name="btnAddDomiSecu">Guardar</button>
                </div>
            </div>
        </div>
    </div>
</div>

