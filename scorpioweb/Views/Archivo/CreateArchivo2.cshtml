@model scorpioweb.Models.Archivoregistro
 
@{
    Layout = null;
}
<style>
    * {
        box-sizing: border-box;
    }


    /*the container must be positioned relative:*/
    .autocomplete {
        position: relative;
        display: inline-block;
    }
    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

    .autocomplete-items div {
        padding: 10px;
        cursor: pointer;
        background-color: #fff;
        border-bottom: 1px solid #d4d4d4;
    }

    /*when hovering an item:*/
    .autocomplete-items div:hover {
        background-color: #e9e9e9;
    }

    /*when navigating through the items using the arrow keys:*/
    .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #f2f2f2;
    }
</style>


<script type="text/javascript">
  $(document).ready(function () {
        function autocomplete(inp, arr) {
                var currentFocus;
                inp.addEventListener("input", function (e) {
                    var a, b, i, val = this.value;
                    closeAllLists();
                    if (!val) { return false; }
                    currentFocus = -1;
                    a = document.createElement("DIV");
                    a.setAttribute("id", this.id + "autocomplete-list");
                    a.setAttribute("class", "autocomplete-items");
                    this.parentNode.appendChild(a);
                    for (i = 0; i < arr.length; i++) {
                        if (arr[i].toUpperCase().includes(val.toUpperCase())) {
                            b = document.createElement("DIV");
                            b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                            b.innerHTML += arr[i].substr(val.length);
                            b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>"; b.addEventListener("click", function (e) {
                                inp.value = this.getElementsByTagName("input")[0].value;

                                closeAllLists();
                            });
                            a.appendChild(b);
                        }
                    }
                });

                inp.addEventListener("keydown", function (e) {
                    var x = document.getElementById(this.id + "autocomplete-list");
                    if (x) x = x.getElementsByTagName("div");
                    if (e.keyCode == 40) {

                        currentFocus++;

                        addActive(x);
                    } else if (e.keyCode == 38) { //up

                        currentFocus--;

                        addActive(x);
                    } else if (e.keyCode == 13) {

                        e.preventDefault();
                        if (currentFocus > -1) {

                            if (x) x[currentFocus].click();
                        }
                    }
                });
                function addActive(x) {

                    if (!x) return false;

                    removeActive(x);
                    if (currentFocus >= x.length) currentFocus = 0;
                    if (currentFocus < 0) currentFocus = (x.length - 1);

                    x[currentFocus].classList.add("autocomplete-active");
                }
                function removeActive(x) {

                    for (var i = 0; i < x.length; i++) {
                        x[i].classList.remove("autocomplete-active");
                    }
                }
                function closeAllLists(elmnt) {
                    var x = document.getElementsByClassName("autocomplete-items");
                    for (var i = 0; i < x.length; i++) {
                        if (elmnt != x[i] && elmnt != inp) {
                            x[i].parentNode.removeChild(x[i]);
                        }
                    }
                }
                document.addEventListener("click", function (e) {
                    closeAllLists(e.target);
                });
        }
        var catalogo = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.catalogo))');
        autocomplete(document.getElementById("Delito"), catalogo);
    });
</script>

<div class="row">
    <div class="col-md-12">
        <form asp-action="CreateArchivo" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group" style="display:none;">
                <label asp-for="IdArchivoRegistro" class="control-label"></label>
                <input readonly asp-for="IdArchivoRegistro" class="form-control" />
                <span asp-validation-for="IdArchivoRegistro" class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Causa Penal</label>
                <input required asp-for="CausaPenal" class="form-control" />
                <span asp-validation-for="CausaPenal" class="text-danger"></span>
            </div>
            <div class="form-group autocomplete col-md-12">
                <label class="control-label">Delito</label>
                <input name="Delito" id="Delito"  type="text" class="form-control" />
            </div>
            <div class="form-group col-md-12">
                <label asp-for="Situacion" class="control-label"></label>
                <input asp-for="Situacion" class="form-control" />
                <span asp-validation-for="Situacion" class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <label asp-for="Sentencia" class="control-label"></label>
                <input asp-for="Sentencia" class="form-control" />
                <span asp-validation-for="Sentencia" class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Fecha de Acuerdo</label>
                <input required asp-for="FechaAcuerdo" type="date" class="form-control" />
                <span asp-validation-for="FechaAcuerdo"  class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <label asp-for="Observaciones" class="control-label"></label>
                <textarea cols="5" asp-for="Observaciones" class="form-control"></textarea>
                <span asp-validation-for="Observaciones" class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Carpeta de Ejecucion</label>
                <input asp-for="CarpetaEjecucion" class="form-control" />
                <span asp-validation-for="CarpetaEjecucion" class="text-danger"></span>
            </div>
            <div class="form-group col-md-12">
                <label class="control-label">Envia</label>
                <select class="form-control" name="Envia" id="Envia"
                        asp-items="@(new SelectList(@ViewBag.ListaGeneral))">
                </select>
            </div>
            <div class="custom-file" style="margin-bottom:10px">
                <input type="file" class="custom-file-input" id="archivoFile" name="archivoFile" lang="es">
            </div>
            <div style="display:none" class="form-group col-md-12">
                <label asp-for="ArchivoIdArchivo" class="control-label"></label>
                <input readonly asp-for="ArchivoIdArchivo" class="form-control" value="@ViewBag.idArchivo"/>
                <span asp-validation-for="ArchivoIdArchivo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button class="btn btn-primary" type="submit">
                        <i class="fa fa-save"></i> Guardar
                </button>                
            </div>
        </form>
    </div>
</div>

