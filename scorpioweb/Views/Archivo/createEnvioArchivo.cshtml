@model scorpioweb.Models.Envioarchivo

@{
    ViewData["Title"] = "createEnvioArchivo";
    Layout = "/Views/Shared/_Layout.cshtml";
}

<style>

    /*the container must be positioned relative:*/
    .autocomplete {
        position: relative;
        display: inline-block;
    }

    input {
        border: 2px solid #f2f2f2;
        border-radius: 5px;
        padding: 10px;
        font-size: 16px;
    }

    input[type=text] {
        width: 100%;
    }

    input[type=submit] {
        background-color: DodgerBlue;
        color: #f2f2f2;
        cursor: pointer;
    }

    .autocomplete-items {
        position: absolute;
        border: 1px solid #d4d4d4;
        border-bottom: none;
        border-top: none;
        z-index: 99;
        /*position the autocomplete items to be the same width as the container:*/
        top: 100%;
        left: 0;
        right: 0;
    }

        .autocomplete-items div {
            padding: 10px;
            cursor: pointer;
            background-color: #fff;
            border-bottom: 1px solid #d4d4d4;
        }

            /*when hovering an item:*/
            .autocomplete-items div:hover {
                background-color: #e9e9e9;
            }

    /*when navigating through the items using the arrow keys:*/
    .autocomplete-active {
        background-color: DodgerBlue !important;
        color: #f2f2f2;
    }
</style>


<script type="text/javascript">
    $(document).ready(function () {
        function autocomplete(inp, arr) {
            var currentFocus;
            inp.addEventListener("input", function (e) {
                var a, b, i, val = this.value;
                closeAllLists();
                if (!val) { return false; }
                currentFocus = -1;
                a = document.createElement("DIV");
                a.setAttribute("id", this.id + "autocomplete-list");
                a.setAttribute("class", "autocomplete-items");
                this.parentNode.appendChild(a);
                for (i = 0; i < arr.length; i++) {
                    if (arr[i].toUpperCase().includes(val.toUpperCase())) {
                        b = document.createElement("DIV");
                        b.innerHTML = "<strong>" + arr[i].substr(0, val.length) + "</strong>";
                        b.innerHTML += arr[i].substr(val.length);
                        b.innerHTML += "<input type='hidden' value='" + arr[i] + "'>"; b.addEventListener("click", function (e) {
                            inp.value = this.getElementsByTagName("input")[0].value;

                            closeAllLists();
                        });
                        a.appendChild(b);
                    }
                }
            });

            inp.addEventListener("keydown", function (e) {
                var x = document.getElementById(this.id + "autocomplete-list");
                if (x) x = x.getElementsByTagName("div");
                if (e.keyCode == 40) {

                    currentFocus++;

                    addActive(x);
                } else if (e.keyCode == 38) { //up

                    currentFocus--;

                    addActive(x);
                } else if (e.keyCode == 13) {

                    e.preventDefault();
                    if (currentFocus > -1) {

                        if (x) x[currentFocus].click();
                    }
                }
            });
            function addActive(x) {

                if (!x) return false;

                removeActive(x);
                if (currentFocus >= x.length) currentFocus = 0;
                if (currentFocus < 0) currentFocus = (x.length - 1);

                x[currentFocus].classList.add("autocomplete-active");
            }
            function removeActive(x) {

                for (var i = 0; i < x.length; i++) {
                    x[i].classList.remove("autocomplete-active");
                }
            }
            function closeAllLists(elmnt) {
                var x = document.getElementsByClassName("autocomplete-items");
                for (var i = 0; i < x.length; i++) {
                    if (elmnt != x[i] && elmnt != inp) {
                        x[i].parentNode.removeChild(x[i]);
                    }
                }
            }
            document.addEventListener("click", function (e) {
                closeAllLists(e.target);
            });
        }
        //https://stackoverflow.com/questions/50056518/ijsonhelper-does-not-contain-a-definition-for-encode

        var catalogo = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.catalogo))');
        autocomplete(document.getElementById("tipoD"), catalogo);
        
        var SituacionJuridico = JSON.parse('@Html.Raw(Json.Serialize(@ViewBag.SituacionJuridico))');
        autocomplete(document.getElementById("SituacionJuridico"), SituacionJuridico);
    });
</script>


<h2>Envio Archivo 📄</h2>

@*<h4>Envioarchivo</h4>*@
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="createEnvioArchivo">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label>Nombre</label>
                <input asp-for="Nombre" class="form-control" />
                <span asp-validation-for="Nombre" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Apellido Paterno</label>
                <input asp-for="Apaterno" class="form-control" />
                <span asp-validation-for="Apaterno" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Apellido Materno</label>
                <input asp-for="Amaterno" class="form-control" />
                <span asp-validation-for="Amaterno" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label>Causa penal</label>
                <input asp-for="Causapenal" class="form-control" />
                <span asp-validation-for="Causapenal" class="text-danger"></span>
            </div>
            <div class="form-group autocomplete">
                <label>Delito</label>
                <input asp-for="Delito" class="form-control" name="tipoD" id="tipoD" />
                <span asp-validation-for="Delito" class="text-danger"></span>
            </div>
@*
            <div class="form-group col-md-12 autocomplete">
                <label class="control-label">tipoD</label>
                <input required name="tipoD" id="tipoD" type="text" maxlength="150" class="form-control" />
            </div>
*@
            <div class="form-group">
                <label for="TipoDocumento">Tipo de Documento</label>
                <select id="TipoDocumento" name="TipoDocumento" class="form-control">
                    <option value="Expediente">Expediente</option>
                    <option value="Oficio">Oficio</option>
                </select>
            </div>
            <div class="form-group autocomplete">
                <label>Situacion Juridico</label>
                <input asp-for="SituacionJuridico" class="form-control" name="SituacionJuridico" id="SituacionJuridico" />
                <span asp-validation-for="SituacionJuridico" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="Recibido" class="control-label"></label>
                <input asp-for="Recibido" readonly class="form-control" value="0" />
                <span asp-validation-for="Recibido" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="Revisado" class="control-label"></label>
                <input asp-for="Revisado" readonly class="form-control" value="0" />
                <span asp-validation-for="Revisado" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="IdArchvo" class="control-label"></label>
                <input asp-for="IdArchvo" class="form-control" readonly/>
                <span asp-validation-for="IdArchvo" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="Observaciones" class="control-label"></label>
                <input asp-for="Observaciones" class="form-control" readonly/>
                <span asp-validation-for="Observaciones" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none">
                <label asp-for="Area" class="control-label"></label>
                <input asp-for="Area" readonly class="form-control" value="@ViewBag.AreaAsignada" />
                <span asp-validation-for="Area" class="text-danger"></span>
            </div>
            <div class="form-group" style="display:none"> 
                <label asp-for="Usuario" class="control-label"></label>
                <input asp-for="Usuario" readonly class="form-control" value="@ViewBag.User" />
                <span asp-validation-for="Usuario" class="text-danger"></span>
            </div>    
            <div class="form-group" style="display:none"> 
                <label class="control-label"></label>
                <label asp-for="FechaRegistro" class="control-label"></label>
                <input asp-for="FechaRegistro" class="form-control" type="datetime" value="@DateTime.Now" readonly />
                <span asp-validation-for="FechaRegistro" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Enviar" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

