@model PaginatedList<scorpioweb.Models.OficialiaAudienciaVM>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

@{
    ViewData["Title"] = "Carpeta de Ejecución";
}

<script>
    showModal = (url, title, id) => {
        $.ajax({
            type: "GET",
            url: url + "?id=" + id,
            success: function (res) {
                $("#form-modal .modal-body").html(res);
                $("#form-modal .modal-title").html(title);
                $("#form-modal").modal('show');
            },
            //data: {
            //    datosBitacora: [IdFracciones],
            //},
            error: function (res) {

            }
        })
    }

    function DeleteCrearAudienciaEp(id) {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger"
            },
            buttonsStyling: false
        });

        swalWithBootstrapButtons.fire({
            title: "¿Estas seguro que quieres borrar el registro?",
            text: "Ya no se podrá revertir el cambio",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Sí, borrar!",
            cancelButtonText: "No, cancelar!",
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "/Ejecucion/DeleteCrearAudienciaEp",
                    traditional: true,
                    data: { dato: id },
                    success: function (response) {
                        if (response.borrar === true) {
                            Swal.fire({
                                title: "Borrado!",
                                text: "El registro ha sido borradoqqq.",
                                icon: "success",
                                timer: 4500
                            });

                            location.reload();
                        } else {
                            swalWithBootstrapButtons.fire({
                                title: "Error",
                                text: "No se pudieron guardar los datos, contacte con el administrador del sistema.",
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swalWithBootstrapButtons.fire({
                            title: "Error",
                            text: "Hubo un problema con la petición AJAX.",
                            icon: "error"
                        });
                    }
                });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                swalWithBootstrapButtons.fire({
                    title: "Cancelado",
                    text: "El registro está seguro :)",
                    icon: "error"
                });
            }
        });
    }
    function DeleteCrearAudiencia(id) {
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: "btn btn-success",
                cancelButton: "btn btn-danger"
            },
            buttonsStyling: false
        });

        swalWithBootstrapButtons.fire({
            title: "¿Estas seguro que quieres borrar el registro?",
            text: "Ya no se podrá revertir el cambio",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Sí, borrar!",
            cancelButtonText: "No, cancelar!",
            reverseButtons: true
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    type: "POST",
                    dataType: "json",
                    url: "/Ejecucion/DeleteCrearAudiencia",
                    traditional: true,
                    data: { dato: id },
                    success: function (response) {
                        if (response.borrar === true) {
                            Swal.fire({
                                title: "Borrado!",
                                text: "El registro ha sido borradoqqq.",
                                icon: "success",
                                timer: 4500
                            });

                            location.reload();
                        } else {
                            swalWithBootstrapButtons.fire({
                                title: "Error",
                                text: "No se pudieron guardar los datos, contacte con el administrador del sistema.",
                                icon: "error"
                            });
                        }
                    },
                    error: function () {
                        swalWithBootstrapButtons.fire({
                            title: "Error",
                            text: "Hubo un problema con la petición AJAX.",
                            icon: "error"
                        });
                    }
                });
            } else if (result.dismiss === Swal.DismissReason.cancel) {
                swalWithBootstrapButtons.fire({
                    title: "Cancelado",
                    text: "El registro está seguro :)",
                    icon: "error"
                });
            }
        });
    }

    var arr = [];

    function myFunction(id, area) {
        var encontro = false;
        var doble;
        for (var i = 0; i < arr.length; i++) {
            if (arr[i] === id && arr[i] === area) {
                encontro = true;
                doble = i;
                break;
            }
        }
        if (encontro == false) {
            arr.push("Id: "+ id+", Area: "+ area);
        } else {
            arr.splice(doble, 1);
        }
    }

    $(document).ready(function () {
        $('#btnImprimirR').on("click", function (e) {
            e.preventDefault();
            $.ajax({
                type: "POST",
                dataType: "json",
                url: "/Ejecucion/ImprimirAudiencias",
                traditional: true,
                data: {
                    datosidAudiencia: arr,
                },
                success: function (response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert(response.responseText);
                    }
                },
                error: function (response) {
                    alert("Informe Generado");
                    //window.location.href = "https://localhost:44359/Documentos/reporteSupervision.docx"
                    window.location.href = "/Documentos/AudienciasEP.docx"
                    //window.location.href = "http://10.6.60.190:432/Documentos/reporteSupervision.docx"
                }
            });

        });
    });
</script>

<h2>Audiencias</h2>
@if (ViewBag.WarningsUser > 0)
{
    <a href="/Archivo/ArchivoPrestamoDigital" class="link-archivo">
        <h3 style="text-align:right; color:blue">Tu solicitud fue atendida: @ViewBag.WarningsUser</h3>
    </a>
}
<form asp-action="listaEpCrearAudiencia" method="get">
    <div>
        <div class="col-md-6">
            <label>
                Búsqueda Carpeta de Ejecución
                <input type="text" name="SearchString" id="SearchString" value="@ViewData["currentFilter"]" />
            </label>
            <button type="submit" class="btn btn-default">
                <i class="fa fa-search"></i>
                Buscar
            </button>
        </div>
        <a asp-action="listaEpCrearAudiencia">Listado completo</a>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                Imprimir
            </th>
            <th>
                No
            </th>
            <th>
                Fecha de Audiencia
            </th>
            <th>
                Usuario
            </th>
            <th>
                Fecha de Notificacion
            </th>
            <th>
                Juzgado
            </th>
            <th>
                Carpeta de Ejecución
            </th>
            <th>
                Sentenciado
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input type="checkbox" id="myCheck" onclick="myFunction(@item.Id, '@item.Area')">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <th>
                    @Html.DisplayFor(modelItem => item.FechaAudiencia)
                </th>
                <td>
                    @Html.DisplayFor(modelItem => item.QuienAsistira)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FechaRecepcion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Juzgado)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CarpetaEjecucion)
                </td>
                <td>
                    @item.Nomcom
                </td>
                @if (item.Area == "Oficialia")
                {
                    <td>
                        <a onclick="showModal('@Url.Action("EditEpCreateAudiencia", "Ejecucion", new { id = @item.Id }, Context.Request.Scheme)','Editar Audiencia',null )" class="btn btn-success fa fa-pencil" style="margin-bottom:10px;"> Editar Audiencia</a>

                        @if (User.IsInRole("Masteradmin") || User.IsInRole("Coordinador Ejecucion") || User.IsInRole("Director"))
                        {
                            <button onclick="DeleteCrearAudiencia(@item.Id)" class="btn btn-danger">
                                <i class="fa fa-trash"></i> Borrar
                            </button>
                        }

                    </td>

                }
                else
                {
                    <td>
                        <a onclick="showModal('@Url.Action("editAudienciaEp", "Ejecucion", new { id = @item.Id }, Context.Request.Scheme)','Editar Audiencia',null )" class="btn btn-success fa fa-pencil" style="margin-bottom:10px;"> Editar Audiencia</a>

                        @if (User.IsInRole("Masteradmin") || User.IsInRole("Coordinador Ejecucion") || User.IsInRole("Director"))
                        {
                            <button onclick="DeleteCrearAudienciaEp(@item.Id)" class="btn btn-danger">
                                <i class="fa fa-trash"></i> Borrar
                            </button>
                        }

                    </td>
                }
                
            </tr>
        }
    </tbody>
</table>

@*@if (ViewBag.usuario)
{
    <a onclick="showModal('@Url.Action("CreateEpCrearAudiencia", "Ejecucion", Context.Request.Scheme)','Crear audiencia',null )"><img src="~/images/addArchivo.png" height="60" width="60" /></a>
*@
    <a id="btnImprimirR" name="btnImprimirR"  class="btn btn-info"><i class="fa fa-file-text-o"></i> Imprimir Reporte</a>
<a asp-action ="createAudienciaEp" asp-controller="Ejecucion"><img src="~/images/addArchivo.png" height="60" width="60" /></a>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<p style="margin-top:30px">
    Página @(Model.TotalPages < Model.PageIndex ? 0 : Model.PageIndex) de @Model.TotalPages
</p>
<a asp-action="listaEpCrearAudiencia"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>
<a asp-action="listaEpCrearAudiencia"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>